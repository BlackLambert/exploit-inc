using UnityEngine;
using Zenject;

namespace SBaier.ExploitInc
{
	public class FailProgressDisplayCreator : MonoBehaviour
	{
		[SerializeField]
		private GameObject _displayPrefab = null;
		[SerializeField]
		private Transform _hook = null;

		private FailableTask _task = null;
		private PrefabFactory _prefabFactory;

		[Inject]
		private void Construct([InjectOptional] FailableTask task,
			PrefabFactory prefabFactory)
		{
			_task = task;
			_prefabFactory = prefabFactory;
		}


		protected virtual void Start()
		{
			if (_task != null)
				create();
		}

		private void create()
		{
			GameObject created = _prefabFactory.Create(_displayPrefab, new PrefabFactory.Parameter[0]);
			created.transform.SetParent(_hook, false);
		}
	}
}
