using System;
using Zenject;

namespace SBaier.ExploitInc
{
	public class TaskBinder 
	{
		public void BindTask(DiContainer container, TaskConfig config)
		{
			if (config is EarnCreditsTaskConfig)
			{
				container.Bind(typeof(Task), typeof(EarnCreditsTask)).To<EarnCreditsTask>().FromInstance(new EarnCreditsTask((EarnCreditsTaskConfig)config)).AsSingle();
				container.Bind(typeof(TaskProgressor)).To<EarnCreditsTaskProgressor>().FromNewComponentOnNewGameObject().AsSingle().NonLazy();
			}
			else if (config is EarnCreditsWithinTimeTaskConfig)
			{
				container.Bind(typeof(Task), typeof(EarnCreditsInTimeTask)).To<EarnCreditsInTimeTask>().FromInstance(new EarnCreditsInTimeTask((EarnCreditsWithinTimeTaskConfig)config)).AsSingle();
				container.Bind(typeof(TaskProgressor)).To<EarnCreditsOnTimeTaskProgressor>().FromNewComponentOnNewGameObject().AsSingle().NonLazy();
			}
			else if (config is HaveCreditsTaskConfig)
			{
				container.Bind(typeof(Task), typeof(HaveCreditsTask)).To<HaveCreditsTask>().FromInstance(new HaveCreditsTask((HaveCreditsTaskConfig)config)).AsSingle();
				container.Bind(typeof(TaskProgressor)).To<HaveCreditsTaskProgressor>().FromNewComponentOnNewGameObject().AsSingle().NonLazy();
			}
			else
				throw new NotImplementedException($"The Task with {config.GetType()} has not been implemented yet!");
		}
	}
}