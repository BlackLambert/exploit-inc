using System;

namespace SBaier.ExploitInc
{
	public abstract class Task 
	{
		public abstract event Action OnProgressChanged;
		public abstract float Progress { get; }

		private bool _isFullfilled = false;
		public event Action OnFullfilledChanged;
		public bool IsFullfilled
		{
			get => _isFullfilled;
			protected set
			{
				_isFullfilled = value;
				OnFullfilledChanged?.Invoke();
			}
		}

		private bool _hasFailed = false;
		public event Action OnHasFailed;
		public bool HasFailed
		{
			get => _hasFailed;
			protected set
			{
				_hasFailed = value;
				OnHasFailed?.Invoke();
			}
		}

		public abstract event Action OnFailedProgressChanged;
		public abstract float FailedProgress { get; }

		public abstract string ProgressText { get; }

		public bool Failable { get; }


		public Task(bool failable)
		{
			Failable = failable;
		}
	}
}