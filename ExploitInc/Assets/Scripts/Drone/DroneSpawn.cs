using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

namespace SBaier.ExploitInc
{
	public class DroneSpawn : MonoBehaviour
	{
		private List<Drone> _spawnedDrones = new List<Drone>();
		public List<Drone> SpawnedDronesCopy => new List<Drone>(_spawnedDrones);
		public int SpawnedDronesCount => _spawnedDrones.Count;


		public event Action<Drone> OnSpawnedDroneAdded;
		public event Action<Drone> OnSpawnedDroneRemoved;

		[SerializeField]
		private DroneHost _host = null;
		public DroneHost Host => _host;

		public void AddNew(Drone drone)
		{
			if (_spawnedDrones.Contains(drone))
				throw new ArgumentException();

			_spawnedDrones.Add(drone);
			OnSpawnedDroneAdded?.Invoke(drone);
			_host.Add(drone);
		}

		public void Remove(Drone drone)
		{
			if (!_spawnedDrones.Contains(drone))
				throw new ArgumentException();

			_host.Remove(drone);
			_spawnedDrones.Remove(drone);
			OnSpawnedDroneRemoved?.Invoke(drone);
		}
	}
}