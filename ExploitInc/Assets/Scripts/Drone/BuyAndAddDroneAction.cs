using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Zenject;

namespace SBaier.ExploitInc
{
	public class BuyAndAddDroneAction 
	{
		private DroneSpawn _spawn;
		private DroneCommandsFactory _commandsFactory;
		private DroneFactory _factory;
		private DroneConfig _droneConfig;
		private MissionData _missionData;

		private BuyAndAddDroneAction(DroneFactory factory,
			DroneCommandsFactory commandsFactory,
			DroneSpawn Spawn,
			DroneConfig droneConfig,
			MissionData missionData)
		{
			_factory = factory;
			_spawn = Spawn;
			_droneConfig = droneConfig;
			_missionData = missionData;
			_commandsFactory = commandsFactory;
		}

		public void Invoke(DroneHost host)
		{
			_missionData.RequestMoney(_droneConfig.GetBuyCostsOf(_spawn.SpawnedDronesCount));
			Drone result = _factory.Create(_spawn.Host.SpawnPoint.position);
			_spawn.AddNew(result);
			Drone drone = _spawn.Host.Remove();
			Command command = _commandsFactory.Create(new AddToHostDroneCommandParameter(host));
			drone.Commander.AddCommand(command);
		}
	}
}