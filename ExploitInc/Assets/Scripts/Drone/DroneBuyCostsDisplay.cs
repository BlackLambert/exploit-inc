
using Zenject;

namespace SBaier.ExploitInc
{

	public class DroneBuyCostsDisplay : CostsDisplay
	{
		private DroneConfig _config;
		private DroneSpawn _spawn;

		protected override double Costs => _config.GetBuyCostsOf(_spawn.SpawnedDronesCount);

		[Inject]
		private void Construct(DroneConfig config,
			DroneSpawn spawn)
		{
			_config = config;
			_spawn = spawn;
		}

		protected override void Start()
		{
			_spawn.Host.OnActiveDroneAdded += onDronesChanged;
			_spawn.Host.OnActiveDroneRemoved += onDronesChanged;
			base.Start();
		}

		protected override void OnDestroy()
		{
			_spawn.Host.OnActiveDroneAdded -= onDronesChanged;
			_spawn.Host.OnActiveDroneRemoved -= onDronesChanged;
			base.OnDestroy();
		}

		private void onDronesChanged(Drone drone)
		{
			updateDisplay();
		}
	}
}