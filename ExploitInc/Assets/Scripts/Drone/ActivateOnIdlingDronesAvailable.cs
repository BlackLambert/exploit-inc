using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Zenject;

namespace SBaier.ExploitInc
{
	public class ActivateOnIdlingDronesAvailable : MonoBehaviour
	{
		[SerializeField]
		private GameObject _objToControll = null;
		[SerializeField]
		private bool _activate = true;

		private DroneSpawn _droneSpawn;

		[Inject]
		private void Construct(DroneSpawn droneSpawn)
		{
			_droneSpawn = droneSpawn;
		}

		protected virtual void Start()
		{
			_droneSpawn.Host.OnIdlingDroneAdded += onDronesChanged;
			_droneSpawn.Host.OnIdlingDroneRemoved += onDronesChanged;
			checkAvtive();
		}

		protected virtual void OnDestroy()
		{
			_droneSpawn.Host.OnIdlingDroneAdded -= onDronesChanged;
			_droneSpawn.Host.OnIdlingDroneRemoved -= onDronesChanged;
		}

		private void onDronesChanged(Drone obj)
		{
			checkAvtive();
		}

		private void checkAvtive()
		{
			_objToControll.SetActive(_activate && _droneSpawn.Host.IdlingCount > 0 ||
				!_activate && _droneSpawn.Host.IdlingCount <= 0);
		}
	}
}