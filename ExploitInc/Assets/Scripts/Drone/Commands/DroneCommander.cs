using System;

namespace SBaier.ExploitInc
{
	public class DroneCommander : ReplaceCommander<DroneCommands>
	{
		public DroneCommander(DroneCommands container) : base(container)
		{
		}

		protected override void validateCommandType(Command command)
		{
			if (!(command is MoveCommand) &&
				!(command is WaitCommand) &&
				!(command is AddToHostCommand) &&
				!(command is TakeDeliverableCommand) &&
				!(command is PlaceDeliverableCommand) &&
				!(command is ExploitResourceCommand) &&
				!(command is RequestDeliverableCommand) &&
				!(command is PromiseDeliverableCommand) &&
				!(command is ReserveResourceContainerCommand) &&
				!(command is ReturnToHostCommand))
				throw new ArgumentException($"The command {command.GetType()} is no valid command for the supplier.");
		}
	}
}