using System.Collections;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;
using Zenject;

namespace SBaier.ExploitInc
{
	public class WareRefinementBuilding : ProductionBuilding
	{
		private Dictionary<WareType, DeliveryContainer> _wareInput;
		public Dictionary<WareType, DeliveryContainer> WareInputCopy => _wareInput;
		public DeliveryContainer WareOutput { get; private set; }

		public WareRefinementBuildingConfig WareRefinementBuildingConfig { get; private set; }
		public override BuildingConfig Config => WareRefinementBuildingConfig;

		public override List<DeliveryContainer> InputContainers => WareInputCopy.Values.ToList();

		public override List<DeliveryContainer> OutputContainers => new List<DeliveryContainer>() { WareOutput };

		[Inject]
		private void Construct(WareRefinementBuildingParameter parameter,
			WareRefinementBuildingConfig config)
		{
			_wareInput = parameter.WareInput;
			WareOutput = parameter.WareOutput;
			WareRefinementBuildingConfig = config;
		}

		public DeliveryContainer GetInput(WareType wareType)
		{
			return _wareInput[wareType];
		}
	}
}