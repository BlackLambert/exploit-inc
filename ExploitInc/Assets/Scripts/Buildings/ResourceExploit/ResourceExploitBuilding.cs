using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Zenject;

namespace SBaier.ExploitInc
{
	public class ResourceExploitBuilding : ProductionBuilding
	{
		public DeliveryContainer WareOutput { get; private set; }
		public ResourceExploitBuildingConfig ResourceExploitBuildingConfig { get; private set; }
		public override BuildingConfig Config => ResourceExploitBuildingConfig;


		[SerializeField]
		private ResourceRadius _resourceRadius = null;
		public ResourceRadius ResourceRadius => _resourceRadius;

		public override List<DeliveryContainer> InputContainers => new List<DeliveryContainer>() { };
		public override List<DeliveryContainer> OutputContainers => new List<DeliveryContainer>() { WareOutput };

		[SerializeField]
		private Transform _building;

		[Inject]
		private void Construct(ResourceExploitBuildingParameter parameter,
			ResourceExploitBuildingConfig config)
		{
			WareOutput = parameter.WareOutput;
			ResourceExploitBuildingConfig = config;
		}
	}
}