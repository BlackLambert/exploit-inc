using System;
using UnityEngine;
using Zenject;

namespace SBaier.ExploitInc
{
	public class InteractionMenuInstaller : MonoInstaller
	{
		[Inject]
		private InteractionMenuParameters _parameters = null;

		[SerializeField]
		private InteractionMenu _menu = null;
		public InteractionMenu Menu { get => _menu; }

		public override void InstallBindings()
		{
			validateParameters();
			Container.Bind(typeof(InteractionMenuParameters)).To<InteractionMenuParameters>().FromInstance(_parameters).AsSingle();
			Container.Bind(typeof(PrefabFactory)).To<PrefabFactory>().AsTransient();
			Container.Bind(typeof(InteractionMenu)).To<InteractionMenu>().FromInstance(Menu).AsSingle();
		}

		private void validateParameters()
		{
			if (_parameters.CloseAction == null)
				throw new ArgumentNullException();
			if (_parameters.Elements == null)
				throw new ArgumentNullException();
		}
	}
}