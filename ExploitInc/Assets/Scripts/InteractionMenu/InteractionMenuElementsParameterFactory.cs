using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Zenject;

namespace SBaier.ExploitInc
{
	public class InteractionMenuElementsParameterFactory : MonoBehaviour
	{
		[SerializeField]
		private InteractionMenuElement _landShipElement;

		private MissionData _missionData;

		[Inject]
		private void Construct(MissionData missionData)
		{
			_missionData = missionData;
		}

		public List<InteractionMenuElementParameters> Create(InteractionMenuContext context)
		{
			switch(context)
			{
				case InteractionMenuContext.Planet:
					return createPlanetInteractionMenuParameters();
				case InteractionMenuContext.Unset:
					throw new ArgumentException();
				default:
					throw new NotImplementedException();
			}
		}

		private List<InteractionMenuElementParameters> createPlanetInteractionMenuParameters()
		{
			List<InteractionMenuElementParameters> result = new List<InteractionMenuElementParameters>();
			switch (_missionData.State)
			{
				case MissionState.Preparation:
					result.Add(new InteractionMenuElementParameters(_landShipElement));
					break;
			}
			return result;
		}
	}
}