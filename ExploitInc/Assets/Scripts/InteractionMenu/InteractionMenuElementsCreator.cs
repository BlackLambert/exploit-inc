using System.Collections.Generic;
using UnityEngine;
using Zenject;

namespace SBaier.ExploitInc
{
	public class InteractionMenuElementsCreator : MonoBehaviour
	{
		[SerializeField]
		private InteractionMenuElementsOrganizer _organizer;

		private InteractionMenuElementFactory _factory;
		private List<InteractionMenuElementParameters> _elementParameters;


		[Inject]
		private void Construct(InteractionMenuElementFactory factory,
			List<InteractionMenuElementParameters> elementParameters)
		{
			_factory = factory;
			_elementParameters = elementParameters;
		}

		protected virtual void Start()
		{
			createElements();
		}

		private void createElements()
		{
			foreach (InteractionMenuElementParameters parameter in _elementParameters)
				addElement(parameter);
		}

		private void addElement(InteractionMenuElementParameters parameters)
		{
			InteractionMenuElement element = createElement(parameters);
			_organizer.AddElement(element);
		}

		private InteractionMenuElement createElement(InteractionMenuElementParameters parameters)
		{
			return _factory.Create(parameters);
		}
	}
}