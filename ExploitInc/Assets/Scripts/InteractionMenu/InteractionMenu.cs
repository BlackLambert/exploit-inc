using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Zenject;

namespace SBaier.ExploitInc
{
	public class InteractionMenu : MonoBehaviour
	{
		
		[SerializeField]
		private InteractionMenuElementsOrganizer _organizer = null;
		public InteractionMenuElementsOrganizer Organizer => _organizer;
		[SerializeField]
		private Transform _objectBase = null;
		[SerializeField]
		private Transform _menuBase = null;

		private Camera _cam;
		public InteractionMenuParameters Parameters { get; private set; }


		[Inject]
		private void Construct([Inject(Id = "InputCamera")]Camera cam,
			InteractionMenuParameters parameters)
		{
			_cam = cam;
			Parameters = parameters;
		}

		protected virtual void Start()
		{
			_organizer.OnHidden += onHidden;
		}

		protected virtual void OnDestroy()
		{

			_organizer.OnHidden -= onHidden;
		}

		protected virtual void Awake()
		{
			_menuBase.position = _cam.WorldToScreenPoint(Parameters.Position);
		}

		protected virtual void Update()
		{
			_menuBase.position = _cam.WorldToScreenPoint(Parameters.Position);
		}

		public void Show()
		{
			_organizer.Show();
		}

		public void Hide()
		{
			_organizer.Hide();
		}



		private void onHidden()
		{
			Destroy(_objectBase.gameObject);
		}
	}
}