using System.Collections;
using UnityEngine;
using Zenject;

namespace SBaier.ExploitInc
{
	public class DeliveryRoute : MonoBehaviour
	{
		[SerializeField]
		private LineRenderer _lineRenderer = null;
		[SerializeField]
		private int _pointCount = 20;
		[SerializeField]
		private Transform _base = null;
		public Transform Base => _base;

		public DeliveryContainer Origin { get; private set; }
		public DeliveryContainer Destination { get; private set; }
		public DroneContainer Drones { get; private set; }

		[Inject]
		public void Construct(DeliveryRouteParameter parameter)
		{
			Origin = parameter.Origin;
			Destination = parameter.Destination;
			Drones = parameter.Drones;
		}

		protected virtual void Start()
		{
			_base.SetParent(Origin.Point, false);
			StartCoroutine(initLine());
		}

		private IEnumerator initLine()
		{
			yield return 0;
			_lineRenderer.positionCount = _pointCount;
			float angle = Vector3.Angle(Origin.Point.position, Destination.Point.position);
			float delta = angle / (_pointCount-1);
			float deltaMag = (Destination.Point.position.magnitude - Origin.Point.position.magnitude)/ (_pointCount - 1);
			for (int i = 0; i < _pointCount; i++)
			{
				Vector3 pos = Vector3.RotateTowards(Origin.Point.position, Destination.Point.position, Mathf.Deg2Rad * delta * i, deltaMag * i);
				_lineRenderer.SetPosition(i, pos);
			}
		}
	}
}