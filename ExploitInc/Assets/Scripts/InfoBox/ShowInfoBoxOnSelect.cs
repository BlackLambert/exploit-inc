using SBaier.Input;
using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Zenject;

namespace SBaier.ExploitInc
{
	public abstract class ShowInfoBoxOnSelect : MonoBehaviour
	{
		[SerializeField]
		private Selectable _selectable = null;

		private InfoBoxFactory _infoFactory;
		private MissionSelector _selector;
		private InfoBox _currentInfoBox;


		[Inject]
		private void Construct(InfoBoxFactory infoFactory,
			MissionSelector selector)
		{
			_infoFactory = infoFactory;
			_selector = selector;
		}

		protected virtual void OnEnable()
		{
			_selectable.OnSelect += onSelect;
			_selectable.OnDeselect += onDeselect;
		}

		protected virtual void OnDisable()
		{
			_selectable.OnSelect -= onSelect;
			_selectable.OnDeselect -= onDeselect;
		}



		private void onSelect(SelectableInputEventArgs args)
		{
			_currentInfoBox = _infoFactory.Create(createParameter(args.RaycastHit.Point, deselect));
			_currentInfoBox.Show();
		}

		protected abstract InfoBoxParameter createParameter(Vector3 point, Action onCloseAction);

		private void onDeselect()
		{
			_currentInfoBox.Hide();
		}

		private void deselect()
		{
			StartCoroutine(deselectNextFrame());
		}

		private IEnumerator deselectNextFrame()
		{
			yield return 0;
			_selector.Deselect();
		}
	}
}