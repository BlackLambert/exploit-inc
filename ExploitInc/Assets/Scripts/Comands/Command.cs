using System;

namespace SBaier.ExploitInc
{
	public class Command
	{
		private CommandState _state = CommandState.Idle;
		public event Action<StateChangeArgs> OnStateChanged;
		public CommandState State
		{
			get => _state;
			set
			{
				CommandState former = _state;
				_state = value;
				OnStateChanged?.Invoke(new StateChangeArgs(this, former, _state));
			}
		}

		public class StateChangeArgs
		{
			public Command Command { get; }
			public CommandState FormerState { get; }
			public CommandState NewState { get; }

			public StateChangeArgs(Command command,
				CommandState formerState,
				CommandState newState)
			{
				Command = command;
				FormerState = formerState;
				NewState = newState;
			}
		}
	}
}