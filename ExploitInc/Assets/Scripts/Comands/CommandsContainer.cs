using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

namespace SBaier.ExploitInc
{
	public abstract class CommandsContainer
	{
		private Command _currentCommand = null;
		public event Action<CommandChangedArgs> OnCurrentCommandChanged;
		public Command CurrentCommand
		{
			get => _currentCommand;
			set
			{
				Command former = _currentCommand;
				_currentCommand = value;
				OnCurrentCommandChanged?.Invoke(new CommandChangedArgs(this, former, _currentCommand));
			}
		}

		public class CommandChangedArgs
		{
			public CommandsContainer Container { get; }
			public Command Former { get; }
			public Command Current { get; }

			public CommandChangedArgs(CommandsContainer container,
				Command former,
				Command current)
			{
				Container = container;
				Former = former;
				Current = current;
			}
		}
	}
}