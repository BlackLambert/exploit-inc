using System;
using System.Collections.Generic;
using SBaier.Input;
using UnityEngine;
using Zenject;

namespace SBaier.ExploitInc
{
	public class PlanetSelectAction : MonoBehaviour
	{
		[SerializeField]
		private Selectable _selectable = null;

		private InteractionMenuFactory _factory;
		private ShipCommander _commander;
		private MissionSelector _selector;

		private InteractionMenu _currentMenu;

		[Inject]
		private void Construct(InteractionMenuFactory factory,
			 ShipCommander commander,
			 MissionSelector selector)
		{
			_factory = factory;
			_commander = commander;
			_selector = selector;
		}

		protected virtual void Start()
		{
			_selectable.OnSelect += onSelect;
			_selectable.OnDeselect += onDeselect;
		}

		protected virtual void OnDestroy()
		{
			_selectable.OnSelect -= onSelect;
			_selectable.OnDeselect -= onDeselect;
		}

		private void onSelect(SelectableInputEventArgs args)
		{
			_currentMenu = _factory.Create(new InteractionMenuParameters(args.RaycastHit.Point, new List<InteractionMenuElementParameters>(), ()=>_selector.Deselect()));
			_currentMenu.Show();
			_commander.AddCommand(new MoveCommand(args.RaycastHit.Point));
		}

		private void onDeselect()
		{
			if(_currentMenu != null)
				_currentMenu.Hide();
		}
	}
}