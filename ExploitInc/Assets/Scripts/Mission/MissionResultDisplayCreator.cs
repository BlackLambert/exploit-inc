using UnityEngine;
using Zenject;

namespace SBaier.ExploitInc
{
	public class MissionResultDisplayCreator : MonoBehaviour
	{
		[SerializeField]
		private GameObject _missionResultDisplayPrefab = null;
		[SerializeField]
		private MissionState _state = MissionState.Failed;

		private PrefabFactory _prefabFactory;
		private MissionData _missionData;

		[Inject]
		private void Construct(PrefabFactory prefabFactory,
			MissionData missionData)
		{
			_prefabFactory = prefabFactory;
			_missionData = missionData;
		}

		protected virtual void Start()
		{
			_missionData.OnMissionStateChanged += onStateChanged;
			checkFailed();
		}

		protected virtual void OnDestroy()
		{
			_missionData.OnMissionStateChanged -= onStateChanged;
		}

		private void onStateChanged()
		{
			checkFailed();
		}

		private void checkFailed()
		{
			if (_missionData.State == _state)
				_prefabFactory.Create(_missionResultDisplayPrefab);
		}
	}
}