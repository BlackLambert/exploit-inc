using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Zenject;

namespace SBaier.ExploitInc
{
	 
	public class SunsCreator : MonoBehaviour
	{
		
		[SerializeField]
		private GameObject _hook = null;
		private List<SunConfig> _sunConfigs;
		private PrefabFactory _prefabFactory;

		[Inject]
		private void Construct(List<SunConfig> sunConfigs,
			PrefabFactory prefabFactory)
		{
			_sunConfigs = sunConfigs;
			_prefabFactory = prefabFactory;
		}

		protected virtual void Start()
		{
			foreach(SunConfig config in _sunConfigs)
			{
				createSun(config);
			}
		}

		private void createSun(SunConfig config)
		{
			Sun sun = _prefabFactory.Create(config.SunPrefab, new PrefabFactory.Parameter[] { new PrefabFactory.Parameter(_hook) });
			sun.transform.SetParent(_hook.transform, false);
			Vector3 distanceVec = config.PlanetDistance;
			if (config.RandomPosition)
				distanceVec = createRandomDistanceVector(config);
			sun.transform.localPosition = distanceVec;
		}

		private Vector3 createRandomDistanceVector(SunConfig config)
		{
			float x = Random.Range(-1f, 1f);
			float y = Random.Range(-1f, 1f);
			float z = Random.Range(-1f, 1f);
			Vector3 vector3 = new Vector3(x, y, z);
			if (vector3 == Vector3.zero)
				vector3 = createRandomDistanceVector(config);
			return vector3.normalized * config.PlanetDistance.magnitude;
		}
	}
}