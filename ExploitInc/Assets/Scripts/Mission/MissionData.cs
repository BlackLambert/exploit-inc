using System;

namespace SBaier.ExploitInc
{
	public class MissionData
	{
		private MissionState _state = MissionState.Preparation;
		public event Action OnMissionStateChanged;
		public MissionState State
		{
			get => _state;
			set
			{
				_state = value;
				OnMissionStateChanged?.Invoke();
			}
		}

		private double _earnedMoney = 0;
		public event Action OnEarnedMoneyChanged;
		public double EarnedMoney
		{
			get => _earnedMoney;
			private set
			{
				_earnedMoney = value;
				OnEarnedMoneyChanged?.Invoke();
			}
		}

		private double _currentMoney;
		public event Action OnCurrentMoneyChanged;
		public double CurrentMoney
		{
			get => _currentMoney;
			private set
			{
				_currentMoney = value;
				OnCurrentMoneyChanged?.Invoke();
			}
		}

		public float MissionStartTime { get; }
		public float OnGoingStartTime { get; set; } = 0;

		public MissionData(float missionStartTime,
			double startMoney)
		{
			MissionStartTime = missionStartTime;
			CurrentMoney = startMoney;
		}



		public void AddEarnedMoney(double amount)
		{
			CurrentMoney += amount;
			EarnedMoney += amount;
		}

		public void RequestMoney(double amount)
		{
			if (amount < 0 || amount > CurrentMoney)
				throw new ArgumentException("You can not request more money than you currently have.");

			CurrentMoney -= amount;
		}

		public void ReduceMoney(double amount)
		{
			if (amount < 0)
				throw new ArgumentException();
			CurrentMoney -= amount;
		}
	}
}