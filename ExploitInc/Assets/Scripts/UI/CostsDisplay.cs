using System.Collections;
using System.Collections.Generic;
using TMPro;
using UnityEngine;
using Zenject;

namespace SBaier.ExploitInc
{
	public abstract class CostsDisplay : MonoBehaviour
	{
		private readonly Color _costsTooHighColor = Color.red;
		private readonly string _costsText = "{0} c";

		private Color _defaultColor = Color.white;
		private MissionData _missionData;

		[SerializeField]
		private TextMeshProUGUI _text = null;

		private bool EnoughMoney => _missionData.CurrentMoney >= Costs;


		[Inject]
		private void Construct(MissionData missionData)
		{
			_missionData = missionData;
		}


		protected virtual void Start()
		{
			_missionData.OnCurrentMoneyChanged += updateDisplay;
			_defaultColor = _text.color;
			updateDisplay();
		}

		protected virtual void OnDestroy()
		{
			_missionData.OnCurrentMoneyChanged -= updateDisplay;
		}


		protected abstract double Costs { get; }

		protected void updateDisplay()
		{
			_text.color = EnoughMoney ? _defaultColor : _costsTooHighColor;
			_text.text = string.Format(_costsText, Costs.ToString());
		}
	}
}