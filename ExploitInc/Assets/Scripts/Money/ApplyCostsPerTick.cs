using UnityEngine;
using Zenject;
using System.Linq;

namespace SBaier.ExploitInc
{
	public class ApplyCostsPerTick : MonoBehaviour
	{
		private Ticker _ticker;
		private BuiltBuildings _builtBuildings;
		private MissionData _missionData;

		protected double Costs => _builtBuildings.Buildings.Sum(b => b.Config.CreditsPerTick);

		[Inject]
		private void Construct(Ticker ticker,
			BuiltBuildings builtBuildings,
			MissionData missionData)
		{
			_ticker = ticker;
			_builtBuildings = builtBuildings;
			_missionData = missionData;
		}

		protected virtual void Start()
		{
			_ticker.OnTick += applyCosts;
		}

		protected virtual void OnDestroy()
		{
			_ticker.OnTick -= applyCosts;
		}

		private void applyCosts()
		{
			if (_missionData.State != MissionState.OnGoing)
				return;
			_missionData.ReduceMoney(Costs);
		}
	}
}