using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Zenject;

namespace SBaier.ExploitInc
{
	public class BrokeChecker : MonoBehaviour
	{
		private ShipCommandFactory _shipCommandFactory;
		private ShipCommander _shipCommander;
		private MissionData _missionData;

		[Inject]
		private void Construct(ShipCommander shipCommander,
			ShipCommandFactory shipCommandFactory,
			MissionData missionData)
		{
			_shipCommander = shipCommander;
			_shipCommandFactory = shipCommandFactory;
			_missionData = missionData;
		}

		protected virtual void Start()
		{
			_missionData.OnCurrentMoneyChanged += checkBroke;
		}

		protected virtual void OnDestroy()
		{
			_missionData.OnCurrentMoneyChanged -= checkBroke;
		}

		private void checkBroke()
		{
			if (_missionData.CurrentMoney > 0)
				return;
			_shipCommander.AddCommand(_shipCommandFactory.Create(new LaunchShipCommandParameter()));
			_missionData.State = MissionState.Failed;
		}
	}
}