using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

namespace SBaier.ExploitInc
{
	public class DeliverableStackOrganizer : MonoBehaviour
	{

		[SerializeField]
		private List<Transform> _hooks = new List<Transform>();
		[SerializeField]
		private DeliveryContainer _deliveryContainer = null;
		private int _nextHookIndex = 0;

		protected virtual void Start()
		{
			_deliveryContainer.OnDelivarableAdded += onAdded;
			_deliveryContainer.OnDeliverableRemoved += onRemoved;
			init();
		}

		protected virtual void OnDestroy()
		{
			_deliveryContainer.OnDelivarableAdded -= onAdded;
			_deliveryContainer.OnDeliverableRemoved -= onRemoved;
		}

		private void onAdded(Deliverable obj)
		{
			add(obj);
		}

		private void onRemoved(Deliverable obj)
		{
			remove(obj);
		}

		private void init()
		{
			foreach(Deliverable deliverable in _deliveryContainer.StoredDeliverablesCopy)
				add(deliverable);
		}

		private void add(Deliverable deliverable)
		{
			Transform hook = _hooks[_nextHookIndex];
			_nextHookIndex++;
			deliverable.Base.SetParent(hook, false);
		}

		private void remove(Deliverable deliverable)
		{
			_nextHookIndex--;
		}
	}
}