using System.Collections.Generic;
using UnityEngine;
using Zenject;

namespace SBaier.ExploitInc
{
	public class DisplayOnBlocked : MonoBehaviour
	{
		private MissionObjectStateMachine _stateMachine;
		[SerializeField]
		private CanvasGroup _canvasGroup = null;

		[Inject]
		private void Construct(MissionObjectStateMachine stateMachine)
		{
			_stateMachine = stateMachine;
		}

		protected virtual void Start()
		{
			_stateMachine.OnActiveStatesChanged += onStateChanged;
			checkDisplay(_stateMachine.ActiveStatesCopy);
		}

		protected virtual void OnDestroy()
		{
			_stateMachine.OnActiveStatesChanged -= onStateChanged;
		}

		private void onStateChanged(MissionObjectStateMachine.StatesChangedArgs args)
		{
			checkDisplay(args.StateMachine.ActiveStatesCopy);
		}

		private void checkDisplay(List<MissionObjectState> activeStates)
		{
			_canvasGroup.alpha = activeStates.Contains(MissionObjectState.NegativeHighlighted) ? 1 : 0;
		}
	}
}