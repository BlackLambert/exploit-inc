using UnityEngine;
using Zenject;

namespace SBaier.ExploitInc
{
	public class BlockPlacementOnMissingMoney : MonoBehaviour
	{
		private const string _errorMessage = "Das kannst du dir nicht leisten";


		[SerializeField]
		private Placeable _placeable = null;
		[SerializeField]
		private MissionObjectStateMachine _stateMachine = null;

		private Costs _costs;
		private MissionData _missionData;

		private bool TooHighCosts => _missionData.CurrentMoney < _costs.Amount;
		private bool _blocking = false;

		[Inject]
		private void Construct(Costs costs,
			MissionData missionData)
		{
			_costs = costs;
			_missionData = missionData;
		}



		protected virtual void Start()
		{
			_missionData.OnCurrentMoneyChanged += onMoneyChanged;
			checkAddBlocking();
		}

		protected virtual void OnDestroy()
		{
			_missionData.OnCurrentMoneyChanged -= onMoneyChanged;
			checkRemoveBlocking();
		}

		private void onMoneyChanged()
		{
			checkBlocked();
		}

		private void checkBlocked()
		{
			checkRemoveBlocking();
			checkAddBlocking();
		}

		private void checkAddBlocking()
		{
			if (!TooHighCosts || _blocking)
				return;
			_blocking = true;
			_placeable.AddError(_errorMessage);
			_stateMachine.Add(this, MissionObjectState.NegativeHighlighted);
		}

		private void checkRemoveBlocking()
		{
			if (TooHighCosts || !_blocking)
				return;
			_placeable.RemoveError(_errorMessage);
			_blocking = false;
			_stateMachine.Remove(this, MissionObjectState.NegativeHighlighted);
		}
	}
}