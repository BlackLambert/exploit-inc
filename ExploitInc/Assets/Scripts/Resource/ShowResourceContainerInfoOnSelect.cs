using SBaier.Input;
using System.Collections;
using UnityEngine;
using Zenject;

namespace SBaier.ExploitInc
{
	public class ShowResourceContainerInfoOnSelect : MonoBehaviour
	{
		[SerializeField]
		private Selectable _selectable = null;
		[SerializeField]
		private ResourceContainer _resourceContainer = null;

		private ResourceContainerInfoFactory _infoFactory;

		private ResourceContainerInfoBox _resourceContainerInfo;
		private MissionSelector _selector;


		[Inject]
		private void Construct(ResourceContainerInfoFactory infoFactory,
			MissionSelector selector)
		{
			_infoFactory = infoFactory;
			_selector = selector;
		}

		protected virtual void Start()
		{
			_selectable.OnSelect += onSelect;
			_selectable.OnDeselect += onDeselect;
		}

		protected virtual void OnDestroy()
		{
			_selectable.OnSelect -= onSelect;
			_selectable.OnDeselect -= onDeselect;
		}



		private void onSelect(SelectableInputEventArgs args)
		{
			_resourceContainerInfo = _infoFactory.Create(new ResourceContainerInfoParameter(args.RaycastHit.Point, deselect, _resourceContainer));
			_resourceContainerInfo.Show();
		}

		private void onDeselect()
		{
			_resourceContainerInfo.Hide();
		}

		private void deselect()
		{
			StartCoroutine(deselectNextFrame());
		}

		private IEnumerator deselectNextFrame()
		{
			yield return 0;
			_selector.Deselect();
		}
	}
}