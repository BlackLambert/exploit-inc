
using System;
using UnityEngine;
using Zenject;

namespace SBaier.ExploitInc
{
	public class InfoBoxFactory : MonoBehaviour
	{
		private PrefabFactory _prefabFactory;
		

		[SerializeField]
		private ResourceContainerInfoInstaller _resourceContainerInfoPrefab = null;
		[SerializeField]
		private ResourceExploitBuildingInfoInstaller _resourceExploitBuildingInfoPrefab = null;

		[Inject]
		private void Construct(PrefabFactory prefabFactory)
		{
			_prefabFactory = prefabFactory;
		}

		public InfoBox Create(InfoBoxParameter parameter)
		{
			if (parameter is ResourceContainerInfoParameter)
				return createResourceContainerInfo(parameter as ResourceContainerInfoParameter);
			if(parameter is ResourceExploitBuildingInfoParameter)
				return createResourceExploitBuildingInfo(parameter as ResourceExploitBuildingInfoParameter);
			throw new NotImplementedException();
		}

		private InfoBox createResourceContainerInfo(ResourceContainerInfoParameter parameter)
		{
			PrefabFactory.Parameter[] parameters = new PrefabFactory.Parameter[] { new PrefabFactory.Parameter(parameter), new PrefabFactory.Parameter(parameter, typeof(InfoBoxParameter)) };
			return _prefabFactory.Create(_resourceContainerInfoPrefab, parameters).InfoBox;
		}

		private InfoBox createResourceExploitBuildingInfo(ResourceExploitBuildingInfoParameter parameter)
		{
			PrefabFactory.Parameter[] parameters = new PrefabFactory.Parameter[] { new PrefabFactory.Parameter(parameter), new PrefabFactory.Parameter(parameter, typeof(InfoBoxParameter)) };
			return _prefabFactory.Create(_resourceExploitBuildingInfoPrefab, parameters).InfoBox;
		}
	}
}